%% Matlab Exercise 1
% Modify this matlab template to accomplish the following: Given a DSB-SC signal, try to recover the message signal. 
% Also, use the message signal to generate the USSB and LSSB signals. You should plot the following figures: 
% figure(1) is the DSB-SC signal figure(2) is the message signal figure(3) is the USSB signal figure(4) is the LSSB signal.

%% parameters
clc;
clear all;
close all;
t0=0.1;                              	% signal duration
ts=0.001;                            	% sampling interval
fs=1/ts;                             	% sampling frequency
t=[-t0:ts:t0];                         	% time vector
f = linspace(-fs/2,fs/2,length(t));     % frequency vector
load DSB_Signal s_dsb                   % s_dsb is the DSB-SC signal

%% DSB-SC signal recovery
% s_dsb is the DSB-SC signal with carrier frequency 250Hz
% You can plot the FT of s_dsb to verify the carrier frequency and find the bandwith of s_dsb

fc = 250; % Carrier Frequency, in Hz
FT_s_dsb = fftshift(fft(s_dsb));
bw = fs * 0.1; % Bandwidth, in Hz
Recei_DSB = s_dsb.*cos(2*pi*fc*t);           % Recei_DSB is the demodulated signal
                                             % ?? is the carrier signal. Assume zero phase                                           
FT_Recei_DSB = fftshift(fft(Recei_DSB))/fs;  % FT of the demodulated signal

% Design the LPF after knowing the bandwidth and carrier frequency  
% Note that the Gain of LPF should be adjusted to recover the orignial message signal

LPF = zeros(1, length(t)); % LPF for the recovery of the message signal

for i = 1:length(t)
    if abs(i - 0.5 * length(t)) <= (bw/fs)*length(t)
        LPF(i) = 1;
    end
end

S_recover = FT_Recei_DSB .* LPF;                      % filtering Recei_DSB with LPF
s_recover = ifft(ifftshift(S_recover)) * fs;          % time domain of the recoverd signal

%% USSB & LSSB can be generated by using Hilbert transform or bandpass filter
%% Generate  USSB & LSSB using bandpass filter
% design two bandpass filters to get the USSB and LSSB signals using the same carrier frequency
% Note that you can get the USSB & LSSB if you know the DSB signal
BPF_1 = zeros(1, length(t));    % BPF_1 is for USSB signal

for i = 1 : length(t)
    if (((fc-bw)/fs) * length(t)) <= abs(i - (length(t)/2)) && abs(i - (length(t)/2)) <=  ((fc/fs) * length(t))
       BPF_1(i) = 1;
    end
end

BPF_2 = LPF;  % BPF_2 is for LSSB signal    

for i = 1 : length(t)
    if ((fc/fs) * length(t)) <= abs(i - (length(t)/2)) && abs(i - (length(t)/2)) <= (((fc+bw)/fs) * length(t))
       BPF_2(i) = 1;
    end
end

% filtered with BPF
USSB = FT_s_dsb .* BPF_1;       % USSB/LSSB is the frequency domain of ussb/lssb signal                               
LSSB = FT_s_dsb .* BPF_2;  

% time domain of USSB & LSSB 
ussb = ifft(ifftshift(USSB));   % ussb/lssb is the time domain of ussb/lssb signal  
lssb = ifft(ifftshift(LSSB));

combined = zeros(1, length(t));
for i = 1:length(t)
    combined(i) = ussb(i) + lssb(i);
end

% s_dsb_hat = hilbert(s_recover);
% ussb_anal = s_dsb - s_dsb_hat .* sin(2*pi*fc*t);
% lssb_anal = s_dsb + s_dsb_hat .* sin(2*pi*fc*t);

% ussb_demod = ussb .* cos(2*pi*fc*t);
% lssb_demod = lssb .* cos(2*pi*fc*t);
% FT_Recei_USSB = fftshift(fft(ussb_demod))/fs;
% FT_Recei_LSSB = fftshift(fft(lssb_demod))/fs;
% USSB_recover = FT_Recei_USSB .* LPF;
% LSSB_recover = FT_Recei_LSSB .* LPF;
% ussb_recover = ifft(ifftshift(USSB_recover));
% lssb_recover = ifft(ifftshift(LSSB_recover));

%% plot 
figure(1);
plot(t,s_dsb),title('The DSB-SC signal in Time Domain');xlabel('time (s)'),ylabel('Amplitude')
% figure(2);
% plot(f/fs, abs(FT_s_dsb)),title('The DSB-SC signal in Frequency Domain');xlabel('Normalized Frequency: f/fs'),ylabel('Magnitude');
% figure(3);
% plot(f/fs, abs(FT_Recei_DSB)),title('The DSB-SC signal in Frequency Domain');xlabel('Normalized Frequency: f/fs'),ylabel('Magnitude')
% figure(4);
% plot(f/fs, abs(S_recover)), title('The LPF signal');xlabel('Normalized Frequency: f/fs'),ylabel('Magnitude')
figure(2);
plot(t,s_recover);title('The message signal');xlabel('time (s)'),ylabel('Amplitude');axis([-t0 t0 0 1])
figure(3);
subplot(1,2,1);plot(t,ussb);title('The USSB signal in time domain');xlabel('time (s)'),ylabel('Amplitude');
subplot(1,2,2);plot(f,abs(USSB)/max(abs(USSB)));title('The USSB signal in frequency domain');xlabel('Frequency (Hz)'),ylabel('Amplitude');
figure(4);
subplot(1,2,1);plot(t,lssb);title('The LSSB signal in time domain');xlabel('time (s)'),ylabel('Amplitude');
subplot(1,2,2);plot(f,abs(LSSB)/max(abs(LSSB)));title('The LSSB signal in frequency domain');xlabel('Frequency (Hz)'),ylabel('Amplitude');
% figure(8);
% plot(t,ussb_recover);title('Recovered USSB');xlabel('time (s)'),ylabel('Amplitude');axis([-t0 t0 0 1])
% figure(9);
% plot(t,lssb_recover);title('Recovered LSSB');xlabel('time (s)'),ylabel('Amplitude');axis([-t0 t0 0 1])

% figure;
% hold on
% plot(t, ussb, 'Color','red')
% plot(t, ussb_anal, 'Color', 'blue')
% hold off
% 
% figure;
% hold on
% plot(t, lssb, 'Color', 'red')
% plot(t, lssb_anal, 'Color', 'blue')
% hold off
